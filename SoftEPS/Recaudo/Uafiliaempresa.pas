UNIT UAFILIAEMPRESA;

INTERFACE

USES
  WINDOWS, MESSAGES, SYSUTILS, VARIANTS, CLASSES, GRAPHICS, CONTROLS, FORMS,
  DIALOGS, GRIDS, DBGRIDS, EXTCTRLS, MENUS, STDCTRLS, MASK, DB, DBTABLES,
  Buttons;

TYPE
  TFRMAFILIEMPRESA = CLASS(TFORM)
    PANEL1: TPANEL;
    PANEL2: TPANEL;
    DBGRID1: TDBGRID;
    EDTNUMERO: TEDIT;
    CBTIPO: TCOMBOBOX;
    MSMES: TMASKEDIT;
    EDTNOMBRE: TEDIT;
    QRYLISTAPAGOS: TQUERY;
    QRYEMPRESAS: TQUERY;
    QRYEMPRESASTIP_DOCUMENTO: TSTRINGFIELD;
    QRYEMPRESASNUM_DOCUMENTO: TSTRINGFIELD;
    QRYEMPRESASCOD_SUCURSAL: TSTRINGFIELD;
    QRYEMPRESASCOD_ACTIVIDAD_ECO: TSTRINGFIELD;
    QRYEMPRESASCOD_ESTADO: TSTRINGFIELD;
    QRYEMPRESASCOD_OFICINA: TSTRINGFIELD;
    QRYEMPRESASCOD_REGIONAL: TSTRINGFIELD;
    QRYEMPRESASTIP_DOCUMENTO_ARP: TSTRINGFIELD;
    QRYEMPRESASNUM_DOCUMENTO_ARP: TSTRINGFIELD;
    QRYEMPRESASCOD_DEPARTAMENTO: TSTRINGFIELD;
    QRYEMPRESASCOD_CIUDAD: TSTRINGFIELD;
    QRYEMPRESASTIP_APORTANTE: TSTRINGFIELD;
    QRYEMPRESASNOM_EMPRESA: TSTRINGFIELD;
    QRYEMPRESASFEC_AFILIACION: TDATETIMEFIELD;
    QRYEMPRESASDIR_EMPRESA: TSTRINGFIELD;
    QRYEMPRESASTEL_EMPRESA: TSTRINGFIELD;
    QRYEMPRESASTEL_EMPRESA2: TSTRINGFIELD;
    QRYEMPRESASURL_EMPRESA: TSTRINGFIELD;
    QRYEMPRESASEML_EMPRESA: TSTRINGFIELD;
    QRYEMPRESASTOT_EMPLEADOS: TSTRINGFIELD;
    QRYEMPRESASCOD_TIPO_PER: TSTRINGFIELD;
    QRYEMPRESASCOD_ZONA: TSTRINGFIELD;
    QRYEMPRESASCOD_DEPARTAMENTO_PAG: TSTRINGFIELD;
    QRYEMPRESASCOD_CIUDAD_PAG: TSTRINGFIELD;
    QRYEMPRESASCOD_PRESENTACION_COM: TSTRINGFIELD;
    QRYEMPRESASCOD_TIP_EMPRESA: TSTRINGFIELD;
    QRYEMPRESASTIP_DOCUMENTO_PEN: TSTRINGFIELD;
    QRYEMPRESASNUM_DOCUMENTO_PEN: TSTRINGFIELD;
    DSTLISTADOPAGOS: TDATASOURCE;
    QRYLISTAPAGOSTIP_DOCUMENTO_AFI: TSTRINGFIELD;
    QRYLISTAPAGOSNUM_DOCUMENTO_AFI: TSTRINGFIELD;
    QRYLISTAPAGOSPRI_APELLIDO: TSTRINGFIELD;
    QRYLISTAPAGOSSEG_APELLIDO: TSTRINGFIELD;
    QRYLISTAPAGOSPRI_NOMBRE: TSTRINGFIELD;
    QRYLISTAPAGOSSEG_NOMBRE: TSTRINGFIELD;
    QRYLISTAPAGOSCOD_MODALIDAD_TRA: TSTRINGFIELD;
    QRYLISTAPAGOSFEC_NACIMIENTO: TDATETIMEFIELD;
    QRYLISTAPAGOSVAL_SUELDO_AFIL: TFLOATFIELD;
    QRYLISTAPAGOSCOD_ESTADO: TSTRINGFIELD;
    LABEL1: TLABEL;
    LABEL2: TLABEL;
    LABEL3: TLABEL;
    LABEL4: TLABEL;
    Image1: TImage;
    Label5: TLabel;
    Label47: TLabel;
    GroupBox1: TGroupBox;
    btnbuscar: TBitBtn;
    PROCEDURE CERRAR1CLICK(SENDER: TOBJECT);
    PROCEDURE FORMCLOSE(SENDER: TOBJECT; VAR ACTION: TCLOSEACTION);
    PROCEDURE EDTNUMEROEXIT(SENDER: TOBJECT);
    PROCEDURE MSMESEXIT(SENDER: TOBJECT);
    PROCEDURE BTNBUSCARCLICK(SENDER: TOBJECT);
    PROCEDURE APPMESSAGE(VAR MSG: TMSG; VAR HANDLED: BOOLEAN);
    procedure FormCreate(Sender: TObject);
    procedure cbtipoExit(Sender: TObject);
  PRIVATE
    { PRIVATE DECLARATIONS }
  PUBLIC
    { PUBLIC DECLARATIONS }
  END;

VAR
  FRMAFILIEMPRESA: TFRMAFILIEMPRESA;

IMPLEMENTATION

uses Uglobal;

{$R *.DFM}

PROCEDURE TFRMAFILIEMPRESA.CERRAR1CLICK(SENDER: TOBJECT);
BEGIN
FRMAFILIEMPRESA.CLOSE
END;

PROCEDURE TFRMAFILIEMPRESA.FORMCLOSE(SENDER: TOBJECT;
  VAR ACTION: TCLOSEACTION);
BEGIN
ACTION := CAFREE;
END;

PROCEDURE TFRMAFILIEMPRESA.EDTNUMEROEXIT(SENDER: TOBJECT);
BEGIN
 if trim(EDTNUMERO.Text) = '' then
 begin
 ShowMessage('Digite  el numero de Documento del Afiliado');
 EDTNUMERO.SetFocus;
 exit;
 end;
IF (CBTIPO.ITEMINDEX >= 0) AND (EDTNUMERO.TEXT > '0') THEN
      BEGIN
            EDTNOMBRE.TEXT := '';
                QRYEMPRESAS.CLOSE;
                QRYEMPRESAS.PREPARE;
                QRYEMPRESAS.REQUESTLIVE := FALSE;
                QRYEMPRESAS.SQL.CLEAR;
                QRYEMPRESAS.SQL.ADD('SELECT * FROM  EMPRESAS  WHERE TIP_DOCUMENTO = :"TIPO" AND NUM_DOCUMENTO = :"NUMERO"');
                QRYEMPRESAS.PARAMS[0].ASSTRING := TRIM(CBTIPO.TEXT);
                QRYEMPRESAS.PARAMS[1].ASSTRING := TRIM(EDTNUMERO.TEXT);
                QRYEMPRESAS.OPEN;
                       IF QRYEMPRESAS.RECORDCOUNT > 0 THEN
                        BEGIN
                        EDTNOMBRE.TEXT :=  QRYEMPRESASNOM_EMPRESA.VALUE;
                        msmes.Text := GLPRESENTACION;
                        END
                        else
                        IF QRYEMPRESAS.RECORDCOUNT = 0 THEN
                        BEGIN
                        ShowMessage(' LA EMPRESA  NO ESTA REGISTRADA VERIFIQUE NUEVAMENTE');
                        FRMAFILIEMPRESA.Close;
                        END


      END;


END;

PROCEDURE TFRMAFILIEMPRESA.MSMESEXIT(SENDER: TOBJECT);
VAR FECHACOMPENSA: TDATE;
 BEGIN
      TRY
      FECHACOMPENSA  := STRTODATE('01/' + MSMES.TEXT);
      EXCEPT  // MENASJE  DE  LOS ERRORES
      //SHOWMESSAGE('ERROR AL CALCULAR LIQUIDACION');
      ON E: ECONVERTERROR DO
         BEGIN
         E.MESSAGE := 'EL PERIODO  ESTA MAL  DIGITADO O IMCOMPLETO';
         MSMES.SETFOCUS;
         RAISE;
         END;
      END;
 END;
PROCEDURE TFRMAFILIEMPRESA.BTNBUSCARCLICK(SENDER: TOBJECT);
VAR FECHACOMPENSA: TDATE;
BEGIN
      TRY
      FECHACOMPENSA  := STRTODATE('01/' + MSMES.TEXT);
                QRYLISTAPAGOS.CLOSE;
                QRYLISTAPAGOS.PREPARE;
                QRYLISTAPAGOS.REQUESTLIVE := FALSE;
                QRYLISTAPAGOS.SQL.CLEAR;
                QRYLISTAPAGOS.SQL.ADD('SELECT TIP_DOCUMENTO_AFI,NUM_DOCUMENTO_AFI,PRI_APELLIDO,SEG_APELLIDO,PRI_NOMBRE,SEG_NOMBRE, COD_MODALIDAD_TRA,FEC_NACIMIENTO,VAL_SUELDO_AFIL,AFILIADOS_EMPRESAS.COD_ESTADO');
                QRYLISTAPAGOS.SQL.ADD('FROM AFILIADOS_EMPRESAS,AFILIADOS WHERE TIP_DOCUMENTO_EMP = :"NIT" AND NUM_DOCUMENTO_EMP = :"EMPRESA" ');
                QRYLISTAPAGOS.SQL.ADD('AND ((FEC_INGRESO_UNI <= :"FECHAI") OR (FEC_INGRESO_UNI <= :"FECHAIN")) AND (((FEC_EGRESO_UNI >= :"FECHAF") OR (FEC_EGRESO_UNI >= :"FECHAFI")) OR FEC_EGRESO_UNI IS NULL) AND ');
                QRYLISTAPAGOS.SQL.ADD('TIP_DOCUMENTO_AFI = TIP_DOCUMENTO AND NUM_DOCUMENTO_AFI = NUM_DOCUMENTO ');
                QRYLISTAPAGOS.PARAMS[0].ASSTRING := TRIM(CBTIPO.TEXT);
                QRYLISTAPAGOS.PARAMS[1].ASSTRING := TRIM(EDTNUMERO.TEXT);
                QRYLISTAPAGOS.PARAMS[2].AsDateTime := STRTODATE('01/' + MSMES.TEXT);
                QRYLISTAPAGOS.PARAMS[3].AsDateTime := STRTODATE('28/' + MSMES.TEXT);
                QRYLISTAPAGOS.PARAMS[4].AsDateTime := STRTODATE('01/' + MSMES.TEXT);
                QRYLISTAPAGOS.PARAMS[5].AsDateTime := STRTODATE('28/' + MSMES.TEXT);

                QRYLISTAPAGOS.OPEN;
                       IF QRYLISTAPAGOS.RECORDCOUNT = 0 THEN
                        BEGIN
                        SHOWMESSAGE(' EMPRESA  NO TENIA  USUARIOS  AFILIADOS  EN EL  MES  DE ' + MSMES.TEXT);
                        END;
                EXCEPT  // MENASJE  DE  LOS ERRORES
      //SHOWMESSAGE('ERROR AL CALCULAR LIQUIDACION');
      ON E: ECONVERTERROR DO
         BEGIN
         E.MESSAGE := 'EL PERIODO  ESTA MAL  DIGITADO O IMCOMPLETO';
         MSMES.SETFOCUS;
         RAISE;
         END;
      END;

END;

procedure TFRMAFILIEMPRESA.APPMESSAGE(var MSG: TMSG; var HANDLED: BOOLEAN);
begin
IF MSG.WPARAM = VK_RETURN THEN
       BEGIN
        IF ((SCREEN.ACTIVECONTROL) IS TCOMBOBOX) THEN
             MSG.WPARAM := VK_TAB;
            IF (((SCREEN.ACTIVECONTROL) IS TEDIT)) THEN
                 MSG.WPARAM := VK_TAB;
       END;

end;

procedure TFRMAFILIEMPRESA.FormCreate(Sender: TObject);
begin
APPLICATION.ONMESSAGE := APPMESSAGE;
end;

procedure TFRMAFILIEMPRESA.cbtipoExit(Sender: TObject);
begin
 if cbtipo.ItemIndex = -1 then
 begin
 ShowMessage('Selecione el tipo de la Empresa');
 cbtipo.SetFocus;
 end;
end;

END.

